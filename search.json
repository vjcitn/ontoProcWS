[{"path":"https://github.com/vjcitn/ontoProcWS/articles/owlents.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"Ontology concepts and tools in Bioconductor for Bioc2024","text":"introduction ontology-related computations R ORDO rare disease ontology CL cell ontology review general ontology resources OWL RDF/XML serialization retrieving, updating, searching OWL representations ontologies using BiocFileCache owl2cache Ontology mapping phenotypes GWAS catalog using Experimental Feature Ontology","code":""},{"path":[]},{"path":"https://github.com/vjcitn/ontoProcWS/articles/owlents.html","id":"ordo-for-rare-diseases","dir":"Articles","previous_headings":"Introduction","what":"ORDO for rare diseases","title":"Ontology concepts and tools in Bioconductor for Bioc2024","text":"first example uses ORDO ontology, distributed compressed OWL format ontoProc package. first 18 lines OWL XML: establishes variety namespaces metadata annotations used throughout ontology. particular interest version string towards end. 3 July 2024, version 4.5 published. working version 4.2. ontoProc uses interface (via reticulate package) owlready2 python modules distributed via pypi. Ingestion typically fast returns instance S3 class owlents. common conceptual relationship encoded ontologies considered “-”. Given term ontology, ancestors terms successively general. Let’s look two terms. Given owlents instance x numeric vector n, x[n] ‘subsets’ information selected terms. seeing mix R python references. package matures, mixing diminish. can use character tags subset owlents instances well. “decode” two ancestors orde[1000]. new feature ontoProc’s OWL processing availability searching labels regular expression matching. feature built owlready2. visualize relationships among terms, plot method leverages ontologyIndex packages CRAN.","code":"library(ontoProcWS) # important for configuration process reticulate::py_install(\"owlready2\", pip=TRUE)  # not always persistent... ## Using virtual environment '/github/home/.virtualenvs/r-reticulate' ... library(ontoProc) pa = get_ordo_owl_path() readLines(pa, 18) ##  [1] \"<?xml version=\\\"1.0\\\"?>\"                                                                                            ##  [2] \"<rdf:RDF xmlns=\\\"http://www.w3.org/2002/07/owl#\\\"\"                                                                  ##  [3] \"     xml:base=\\\"http://www.w3.org/2002/07/owl\\\"\"                                                                    ##  [4] \"     xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\"                                                                 ##  [5] \"     xmlns:efo=\\\"http://www.ebi.ac.uk/efo/\\\"\"                                                                       ##  [6] \"     xmlns:obo=\\\"http://purl.obolibrary.org/obo/\\\"\"                                                                 ##  [7] \"     xmlns:owl=\\\"http://www.w3.org/2002/07/owl#\\\"\"                                                                  ##  [8] \"     xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\"                                                     ##  [9] \"     xmlns:xml=\\\"http://www.w3.org/XML/1998/namespace\\\"\"                                                            ## [10] \"     xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema#\\\"\"                                                               ## [11] \"     xmlns:ORDO=\\\"http://www.orpha.net/ORDO/\\\"\"                                                                     ## [12] \"     xmlns:rdfs=\\\"http://www.w3.org/2000/01/rdf-schema#\\\"\"                                                          ## [13] \"     xmlns:skos=\\\"http://www.w3.org/2004/02/skos/core#\\\"\"                                                           ## [14] \"     xmlns:terms=\\\"http://purl.org/dc/terms/\\\"\"                                                                     ## [15] \"     xmlns:licenses=\\\"https://creativecommons.org/licenses/\\\"\"                                                      ## [16] \"     xmlns:oboInOwl=\\\"http://www.geneontology.org/formats/oboInOwl#\\\">\"                                             ## [17] \"    <Ontology rdf:about=\\\"https://www.orphadata.com/data/ontologies/ordo/last_version/ORDO_en_4.2.owl\\\">\"           ## [18] \"        <versionIRI rdf:resource=\\\"https://www.orphadata.com/data/ontologies/ordo/last_version/ORDO_en_4.2.owl\\\"/>\" orde = setup_entities(pa) orde ## owlents instance with 15239 classes. orde[1000:1001] ## owlents instance with 2 classes. ancestors(orde[1000:1001]) ## $Orphanet_79083 ## {ORDO.Orphanet_557493, owl.Thing, ORDO.Orphanet_377788, ORDO.Orphanet_79083, ORDO.Orphanet_C001} ##  ## $Orphanet_146 ## {ORDO.Orphanet_146, ORDO.Orphanet_557493, owl.Thing, ORDO.Orphanet_377788, ORDO.Orphanet_C001} labels(orde[1000:1001]) ##                                 Orphanet_79083  ## \"PPARG-related familial partial lipodystrophy\"  ##                                   Orphanet_146  ##             \"Differentiated thyroid carcinoma\" labels(orde[c(\"Orphanet_377788\", \"Orphanet_557493\")]) ## Orphanet_377788 Orphanet_557493  ##       \"Disease\"      \"disorder\" lsrch = search_labels(orde$owlfn, \"*lipodystrophy*\") length(lsrch) ## [1] 26 plot(orde, names(lsrch)[15:25])"},{"path":"https://github.com/vjcitn/ontoProcWS/articles/owlents.html","id":"cell-ontology","dir":"Articles","previous_headings":"Introduction","what":"Cell ontology","title":"Ontology concepts and tools in Bioconductor for Bioc2024","text":"owl2cache function retrieves OWL URL file places cache avoid repetitious retrievals. default cache one defined BiocFileCache::BiocFileCache(). work cell ontology. setup_entities use owlready2 python modules parse OWL produce instance S3 class owlents. plot method available. Given vector tags reported OWL (colons used), plot method produces ontologyIndex instance runs onto_plot2 result.","code":"library(ontoProc) clont_path = owl2cache(url=\"http://purl.obolibrary.org/obo/cl.owl\") # need to fix! tmp = readLines(clont_path) bad = grep(\"STATO_0000416\", tmp)[1:2]  # see https://github.com/obophenotype/cell-ontology/issues/3237 tmp = tmp[-bad] bad = grep(\"STATO_0000663\", tmp)[1:2]  # see https://github.com/obophenotype/cell-ontology/issues/3237 tmp = tmp[-bad] tf = tempfile() writeLines(tmp, tf) cle = setup_entities(tf) cle ## owlents instance with 18718 classes. sel = c(\"CL_0000492\", \"CL_0001054\", \"CL_0000236\",  \"CL_0000625\", \"CL_0000576\",  \"CL_0000623\", \"CL_0000451\", \"CL_0000556\") plot(cle, sel)"},{"path":"https://github.com/vjcitn/ontoProcWS/articles/owlents.html","id":"illustrations-with-human-phenotype-ontology","dir":"Articles","previous_headings":"Introduction","what":"Illustrations with Human Phenotype ontology","title":"Ontology concepts and tools in Bioconductor for Bioc2024","text":"’ll obtain ad hoc selection 15 UBERON term names visualize hierarchy.  prefixes class names ontology give sense scope. characterize human phenotypes ontologically, CL, GO, CHEBI, UBERON play significant roles.","code":"hpont_path = owl2cache(url=\"http://purl.obolibrary.org/obo/hp.owl\") ## resource BFC2 already in cache from http://purl.obolibrary.org/obo/hp.owl hpents = setup_entities(hpont_path) kp = grep(\"UBER\", hpents$clnames, value=TRUE)[21:35] plot(hpents, kp) ## some index values not matched, ignoring t(t(table(sapply(strsplit(hpents$clnames, \"_\"), \"[\", 1)))) ##          ##          [,1]  ##   CHEBI   1849 ##   CL      1196 ##   GO      2520 ##   HP     19657 ##   HsapDv    12 ##   MPATH     75 ##   NBO       64 ##   PATO     570 ##   PR       206 ##   RO         1 ##   UBERON  5641"},{"path":"https://github.com/vjcitn/ontoProcWS/articles/owlents.html","id":"caching","dir":"Articles","previous_headings":"","what":"Caching","title":"Ontology concepts and tools in Bioconductor for Bioc2024","text":"described owl2cache . default, BiocFileCache’s cache used. Query available OWL files. present attempt identify ontology version. enhancement may introduced future revision ontoProc. path, setup_entities deserialize content owlents class.","code":"library(BiocFileCache) ## Loading required package: dbplyr ca = BiocFileCache() bfcquery(ca, \"owl\") ## # A tibble: 2 × 10 ##   rid   rname create_time access_time rpath rtype fpath last_modified_time etag  ##   <chr> <chr> <chr>       <chr>       <chr> <chr> <chr> <chr>              <chr> ## 1 BFC1  cl.o… 2025-08-11… 2025-08-11… /git… web   http… 2025-07-30 12:34:… 0x8D… ## 2 BFC2  hp.o… 2025-08-11… 2025-08-11… /git… web   http… 2025-08-11 22:16:… 0x8D… ## # ℹ 1 more variable: expires <dbl>"},{"path":"https://github.com/vjcitn/ontoProcWS/articles/owlents.html","id":"ontology-of-gwas-outcomes-in-the-gwas-catalog","dir":"Articles","previous_headings":"","what":"Ontology of GWAS outcomes in the GWAS catalog","title":"Ontology concepts and tools in Bioconductor for Bioc2024","text":"section examine package development, gwasCatSearch. uses ideas semantic sql project improve performance common operations ontologies. ’ll use search app shinyapps.io explore connections GWAS catalog Experimental Factor Ontology used annotate GWAS outcomes. Intermediate components corpustools enhancing discovery natural language formulations phenotypes, SQLite, tables representing ontology terms ancestors descendants. segment gives sense outcomes can sorted according frequency recorded hits catalog, associated EFO terms decoded.","code":"library(gwasCatSearch) ## Loading required package: corpustools library(RSQLite) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:dbplyr': ##  ##     ident, sql ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union con = gwasCatSearch_dbconn() dbListTables(con) ##  [1] \"efo_dbxrefs\"              \"efo_edges\"                ##  [3] \"efo_entailed_edges\"       \"efo_labels\"               ##  [5] \"efo_synonyms\"             \"gwascatalog_associations\" ##  [7] \"gwascatalog_mappings\"     \"gwascatalog_metadata\"     ##  [9] \"gwascatalog_references\"   \"uberon_edges\"             ## [11] \"uberon_entailed_edges\"    \"uberon_labels\"            ## [13] \"uberon_synonyms\"          \"version_info\" tbl(con, \"gwascatalog_associations\") |> select(MAPPED_TRAIT_URI) |>      group_by(MAPPED_TRAIT_URI) |> summarise(n=n()) |> arrange(desc(n)) ## # Source:     SQL [?? x 2] ## # Database:   sqlite 3.50.3 [/tmp/Rtmp3YiCqz/gwascatalog_search.db] ## # Ordered by: desc(n) ##    MAPPED_TRAIT_URI                         n ##    <chr>                                <int> ##  1 http://www.ebi.ac.uk/efo/EFO_0004339 25475 ##  2 http://www.ebi.ac.uk/efo/EFO_0004340 13668 ##  3 http://www.ebi.ac.uk/efo/EFO_0004612  8100 ##  4 http://www.ebi.ac.uk/efo/EFO_0007937  8045 ##  5 http://www.ebi.ac.uk/efo/EFO_0007788  7796 ##  6 http://www.ebi.ac.uk/efo/EFO_0004530  7749 ##  7 http://www.ebi.ac.uk/efo/EFO_0005664  6815 ##  8 http://www.ebi.ac.uk/efo/EFO_0004747  6758 ##  9 http://www.ebi.ac.uk/efo/EFO_0004611  6568 ## 10 http://www.ebi.ac.uk/efo/EFO_0007874  6547 ## # ℹ more rows tbl(con, \"efo_labels\") |> filter(Subject %in% c(\"EFO:0004340\", \"EFO:0004612\")) ## # Source:   SQL [?? x 6] ## # Database: sqlite 3.50.3 [/tmp/Rtmp3YiCqz/gwascatalog_search.db] ##   Subject     Object                      IRI   DiseaseLocation Direct Inherited ##   <chr>       <chr>                       <chr> <chr>            <int>     <int> ## 1 EFO:0004340 body mass index             http… NA                 307        31 ## 2 EFO:0004612 high density lipoprotein c… http… NA                 489        17"},{"path":"https://github.com/vjcitn/ontoProcWS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vincent Carey. Contributor, maintainer. Sara Stankiewicz. Contributor.","code":""},{"path":"https://github.com/vjcitn/ontoProcWS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carey V (2025). ontoProcWS: workshop Bioc2024 processing ontologies anatomy, cell lines, . R package version 1.0.8, https://github.com/vjcitn/ontoProcWS.","code":"@Manual{,   title = {ontoProcWS: workshop for Bioc2024 on processing of ontologies of anatomy, cell lines, and so on},   author = {Vincent Carey},   year = {2025},   note = {R package version 1.0.8},   url = {https://github.com/vjcitn/ontoProcWS}, }"},{"path":"https://github.com/vjcitn/ontoProcWS/index.html","id":"ontoprocws","dir":"","previous_headings":"","what":"workshop for Bioc2024 on processing of ontologies of anatomy, cell lines, and so on","title":"workshop for Bioc2024 on processing of ontologies of anatomy, cell lines, and so on","text":"Materials Bioc2024 workshop ontology analysis ontoProc introduction ontology-related computations R ORDO rare disease ontology CL cell ontology review general ontology resources OWL RDF/XML serialization retrieving, updating, searching OWL representations ontologies using BiocFileCache owl2cache Ontology mapping phenotypes GWAS catalog using Experimental Feature Ontology","code":""}]
